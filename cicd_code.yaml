name: CI/CD Workflow

on:
  push:
    branches:
      - main

env:
  AWS_REGION: us-east-2

jobs:

  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'
        
    - name: Install dependencies
      run: |
        npm ci
        
    - name: Build React app
      run: |
        npm run build
        
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: build
        
  test:
    needs: build
    runs-on: ubuntu-latest
     
    steps:
    - uses: actions/checkout@v3
    
    - name: Download artifact
      uses: actions/download-artifact@v3
      with:
        name: dist
        
    - name: Test
      run: |
        npm test
        
  deploy:
    needs: [build, test]
    runs-on: ubuntu-latest
    
    steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
        
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      
    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        
    - name: Deploy to EKS
      run: |
        kubectl apply -f k8s/
        kubectl set image deployment/app-name app=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        
    - name: Verify deployment
      run: |
        kubectl get services --namespace production
        kubectl get pods --namespace production