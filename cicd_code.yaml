name: Deploy EKS and API Gateway

on:
  push:
    branches:
      - main

env:
  AWS_REGION: us-east-2
  PYTHON_VERSION: 3.9
  GO_VERSION: 1.18

jobs:

  build-test-python:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Run Python tests
      run: |
        python -m unittest discover tests/

  build-test-go:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    - name: Set up Go ${{ env.GO_VERSION }}
      uses: actions/setup-go@v3
      with:
        go-version: ${{ env.GO_VERSION }}
    - name: Build Go code
      run: go build ./...
    - name: Run Go tests
      run: go test ./...

  deploy-eks:
    needs: [build-test-python, build-test-go]
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
    - name: Deploy EKS cluster
      run: |
        # Add your EKS deployment commands here
        # For example:
        aws eks create-cluster --name my-cluster --version 1.28 --role-arn arn:aws:iam::058264145861:role/avawus1cgeksroletest --resources-vpc-config subnetIds=subnet-0a80b7ae31e6c34a7,subnet-0b8a741297c7f23fd,securityGroupIds=sg-0f565c5900643a479,endpointPublicAccess=true,endpointPrivateAccess=true

  deploy-api-gateway:
    needs: [build-test-python, build-test-go]
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
    - name: Deploy API Gateway
      run: |
        # Add your API Gateway deployment commands here
        # For example:
        aws apigateway create-rest-api --name my-api --description "My API Gateway" --endpoint-configuration '{"types":"EDGE"}'